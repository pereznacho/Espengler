from pathlib import Path
import os
from django.core.management.utils import get_random_secret_key

# ‚úÖ Define BASE_DIR correctamente con Path
BASE_DIR = Path(__file__).resolve().parent.parent

# ‚úÖ Seguridad
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', get_random_secret_key())

#SECRET_KEY = 'django-insecure-u_rqw$ja0jx+u!*&ohwvx=lu1tj3fn6*ygn&#*jeq%iyi93@69'
DEBUG = False

ALLOWED_HOSTS = ["127.0.0.1", "localhost"]

INTERNAL_IPS = ["127.0.0.1"]

# ‚úÖ Configuraci√≥n de archivos est√°ticos
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = BASE_DIR / 'staticfiles'

# ‚úÖ Configuraci√≥n de archivos multimedia
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# üìÅ Nuevo almacenamiento privado para im√°genes de Writeups
PROTECTED_MEDIA_URL = "/admin/media/"
PROTECTED_MEDIA_ROOT = BASE_DIR / "protected_media"
PROTECTED_MEDIA_ROOT = os.path.join(BASE_DIR, "protected_media")

# ‚úÖ Configuraci√≥n correcta para CKEditor
CKEDITOR_ALLOW_NONIMAGE_FILES = True
CKEDITOR_RESTRICT_BY_USER = False

# ‚úÖ Agregar permisos para proteger `PROTECTED_MEDIA_URL`
LOGIN_URL = "/admin/login/"  # Redirigir a login si no est√° autenticado
MEDIA_ACCESS_PROTECTED = True  # Activa protecci√≥n de archivos privados

# ------------------------
# üìå MIDDLEWARE
# ------------------------
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]



# ‚úÖ URL y ruta protegida para evitar acceso a im√°genes sin permisos
MEDIA_PROTECTED_ROUTE = "/admin/protected-media/"
PROTECTED_MEDIA_ROOT = BASE_DIR / "protected_media"

# ------------------------
# üìå Configuraci√≥n de almacenamiento de im√°genes en Writeups
# ------------------------
WRITEUP_IMAGE_STORAGE_PATH = os.path.join(MEDIA_ROOT, "writeups")

# ‚úÖ Bleach Config (Evita XSS en CKEditor)
BLEACH_ALLOWED_TAGS = [
    'p', 'b', 'i', 'u', 'em', 'strong', 'a', 'span', 'div', 'br', 'ul', 'ol', 'li',
    'blockquote', 'code', 'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'table', 'thead',
    'tbody', 'tr', 'th', 'td', 'img', 'mark'
]

BLEACH_ALLOWED_ATTRIBUTES = {
    '*': ['style', 'class'],
    'a': ['href', 'title', 'target', 'rel'],
    'img': ['src', 'alt', 'width', 'height']
}

BLEACH_STRIP_TAGS = False
BLEACH_STRIP_COMMENTS = True


INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ProjectManager',
    'django_ckeditor_5',
    'attack_narrative',
    'BackupRestore',
    'colorfield',
    'tinymce',
]



DATA_UPLOAD_MAX_NUMBER_FIELDS = 15000



TINYMCE_JS_URL = 'https://cdn.tiny.cloud/1/no-api-key/tinymce/7/tinymce.min.js'
TINYMCE_COMPRESSOR = False

TINYMCE_DEFAULT_CONFIG = {
    "theme": "silver",
    "height": 1000,
    "width": 850,
    "selector": 'textarea#id_content',
    "menubar": "file edit view insert format tools",
    "plugins": "advlist autolink lists link image charmap print preview anchor searchreplace visualblocks code fullscreen insertdatetime media table paste code help wordcount spellchecker pagebreak",
    "toolbar": "undo redo | link image | formatselect | spellchecker bold italic backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | placeholders | pagebreak",
    "image_title": True,
    "pagebreak_split_block": True,
    "pagebreak_separator": '<!-- my page break -->',
    "automatic_uploads": True,
    "file_picker_types": "image",
    "file_picker_callback": """
        function(callback, value, meta) {
            var input = document.createElement('input');
            input.setAttribute('type', 'file');
            input.setAttribute('accept', 'image/*');

            input.onchange = function () {
                var file = this.files[0];

                var reader = new FileReader();
                reader.onload = function () {
                    var id = 'blobid' + (new Date()).getTime();
                    var blobCache = tinymce.activeEditor.editorUpload.blobCache;
                    var base64 = reader.result.split(',')[1];
                    var blobInfo = blobCache.create(id, file, base64);
                    blobCache.add(blobInfo);
                    callback(blobInfo.blobUri(), { title: file.name });
                };
                reader.readAsDataURL(file);
            };

            input.click();
        }
    """,

    # Agregar la funcionalidad del bot√≥n "placeholders"
    "setup": """
        function(editor) {
            editor.ui.registry.addMenuButton('placeholders', {
                text: 'Insert Placeholder',
                fetch: function(callback) {
                    var placeholders = [
                        { text: 'Scope', value: '###Scope###' },
                        { text: 'Severity Profile', value: '###SeverityProfile###' },
                        { text: 'Port Map Table', value: '###PortMapTable###' },
                        { text: 'Overall Table Vulnerabilities', value: '###OverallTableVulns###' },
                        { text: 'Graphmap', value: '###Graphmap###' },
                        { text: 'GraphicBySeverity', value: '###GraphOverallVulns###' },
                        {text: 'VulnsTable', value: '###VulnsTable###' },
                        { text: 'Break Page', value: '###BreakPage###' }
                    ];

                    var items = placeholders.map(function(placeholder) {
                        return {
                            type: 'menuitem',
                            text: placeholder.text,
                            onAction: function() {
                                editor.insertContent(placeholder.value);
                            }
                        };
                    });

                    callback(items);
                }
            });
        }
    """
}



X_FRAME_OPTIONS = 'SAMEORIGIN'
SECURE_CONTENT_TYPE_NOSNIFF = False
SECURE_BROWSER_XSS_FILTER = False
SECURE_CROSS_ORIGIN_OPENER_POLICY = None  # Evita bloqueos en CKEditor5 dentro del Admin de Django
CKEDITOR_ALLOW_NONIMAGE_FILES = True
CKEDITOR_RESTRICT_BY_USER = False

LOGIN_REDIRECT_URL = '/'

# Configuraci√≥n de CKEditor 5 con estilos personalizados
# ------------------------
# üìå Configuraci√≥n de CKEditor 5
# ------------------------
#CKEDITOR_5_CUSTOM_PATH = "static/ckeditor5-build-custom"

CKEDITOR_5_CONFIGS = {
    "default": {
        "language": "es",
        "height": 800,
        "width": "auto",
        "toolbar": [
            "heading", "|",
            "bold", "italic", "underline", "strike", "|",
            "subscript", "superscript", "removeFormat", "|",
            "bulletedList", "numberedList", "outdent", "indent", "|",
            "alignment", "|",
            "fontSize", "fontFamily", "fontColor", "fontBackgroundColor", "|",
            "highlight", "blockQuote", "code", "codeBlock", "|",
            "link", "imageUpload", "mediaEmbed", "insertTable", "|",
            "undo", "redo", "|",
            "sourceEditing", "htmlEmbed", "markdown"
        ],
        "theme": "lark",  # ‚úÖ Aplica el tema Lark
        "contentsCss": ["/static/css/ckeditor-dark-theme.css"],  # ‚úÖ Usa un nuevo CSS espec√≠fico para el editor
        "editorConfig": {
            "bodyClass": "dark-mode-editor",  # ‚úÖ Aplicar clase dentro del iframe
        } 
    }
}    

ROOT_URLCONF = 'VulnerabilityManager.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'VulnerabilityManager.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

LANGUAGE_CODE = 'en-US'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


JAZZMIN_SETTINGS = {
    "site_title": "Espengler",
    "site_header": "Espengler",
    "site_brand": "Espengler",
    "site_icon": "admin-interface/favicon/favicon.png",
    # Add your own branding here
    "site_logo": "admin-interface/logo/Logo.png",
    "welcome_sign": "Welcome to Espengler",
    # Copyright on the footer
    "copyright": "Espengler",
    "user_avatar": None,
    "custom_css": "css/custom_admin_login.css",
    ############
    # Top Menu #
    ############
    # Links to put along the top menu
    "topmenu_links": [
        # Url that gets reversed (Permissions can be added)
        {"name": "Home", "url": "home", "permissions": ["auth.view_user"]},
        # model admin to link to (Permissions checked against model)
        {"model": "auth.User"},
    ],


  
    #############
    # Side Menu #
    #############
    # Whether to display the side menu
    "show_sidebar": True,
    # Whether to aut expand the menu
    "navigation_expanded": True,
    # Custom icons for side menu apps/models See https://fontawesome.com/icons?d=gallery&m=free&v=5.0.0,5.0.1,5.0.10,5.0.11,5.0.12,5.0.13,5.0.2,5.0.3,5.0.4,5.0.5,5.0.6,5.0.7,5.0.8,5.0.9,5.1.0,5.1.1,5.2.0,5.3.0,5.3.1,5.4.0,5.4.1,5.4.2,5.13.0,5.12.0,5.11.2,5.11.1,5.10.0,5.9.0,5.8.2,5.8.1,5.7.2,5.7.1,5.7.0,5.6.3,5.5.0,5.4.2
    # for the full list of 5.13.0 free icon classes
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "users.User": "fas fa-user",
        "auth.Group": "fas fa-users",
        "admin.LogEntry": "fas fa-file",

        # **Custom Icons para tu barra lateral**
        "ProjectManager.evidenceimage": "fas fa-camera",  # üì∏ C√°mara / Foto
        "ProjectManager.port": "fas fa-network-wired",  # üåê Conexi√≥n de red / Puertos
        "ProjectManager.project": "fas fa-folder-open",  # üìÅ Proyectos
        "ProjectManager.reportcovertemplate": "fas fa-palette",  # üé® Tapas de Reporte
        "ProjectManager.reporttemplate": "fas fa-file-alt",  # üìú Templates de Reporte
        "ProjectManager.target": "fas fa-crosshairs",  # üéØ Target (Mira de disparo)
        "ProjectManager.vulnerability": "fas fa-bug",  # üêû Vulnerabilidades
#        "ProjectManager.attack_narrative": "fas fa-sticky-note",  # üìù Notas / Writeups
    },

    # **Iconos por defecto si no est√°n especificados**
    "default_icon_parents": "fas fa-folder",
    "default_icon_children": "fas fa-file-alt",

    #################
    # Related Modal #
    #################
    # Use modals instead of popups
    "related_modal_active": False,
    #############
    # UI Tweaks #
    #############
    # Relative paths to custom CSS/JS scripts (must be present in static files)
    # Uncomment this line once you create the bootstrap-dark.css file
    # "custom_css": "css/bootstrap-dark.css",
    "custom_js": None,
    # Whether to show the UI customizer on the sidebar
    "show_ui_builder": False,
    ###############
    # Change view #
    ###############
    "changeform_format": "horizontal_tabs",
    # override change forms on a per modeladmin basis
    "changeform_format_overrides": {
        "auth.user": "collapsible",
        "auth.group": "vertical_tabs",
    },
}


JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_colour": "navbar-success",
    "accent": "accent-teal",
    "navbar": "navbar-dark",
    "no_navbar_border": False,
    "navbar_fixed": False,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": False,
    "sidebar": "sidebar-dark-info",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "cyborg",
    "dark_mode_theme": None,
    "button_classes": {
        "primary": "btn-primary",
        "secondary": "btn-secondary",
        "info": "btn-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-success",
    },
}
